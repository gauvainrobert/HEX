/******************************************************************
* Jouer                                                  		      *
* Description: Module de gestion des tours de jeu                 *
* F. ANTOINE - Univ. de Toulouse III - Paul Sabatier              *
*******************************************************************/

package hex;

public class Jouer implements Runnable{
 
	/**Variables */
	private int nbCoupBlanc=1;
	private int nbCoupNoir=1;
	private int nbTour=0;
	private int taille;
	private char pionQuiCommence;
	private boolean ia;
	private boolean commence_ia;
	private String difficulte;
	
	
	/**Constructeur*/
	public Jouer(int taille, char pionQuiCommence, boolean ia, boolean commence_ia, String difficulte) {
		
	}

	/**setteurs*/
	public void setNbCoupBlanc(int nbCoupBlanc) {
		this.nbCoupBlanc = nbCoupBlanc;
	}


	public void setNbCoupNoir(int nbCoupNoir) {
		this.nbCoupNoir = nbCoupNoir;
	}


	public void setNbTour(int nbTour) {
		this.nbTour = nbTour;
	}

	/**
	 * Description: vérifie si le coup qu'on joue appartient 
	 * au plateau et si il n'est pas deja occupé, 
	 * renvoi true si on peut mettre la valeur
	 * false sinon
	 * 
	 * pré-condition: s!=NULL 
	 */
	private boolean verifierCoup(String s, int x,int y){
		
		int max=(int) Math.sqrt(s.length());
		if(x<0 || x>max-1 || y<0 || y>max-1){
			System.out.println("Coordonnées incorrect. Les valeurs doivent être comprise entre 0 et "+ (max-1));
			return false;
		}
		if(Plateau.verifierCase(s,x,y)!='.'){
			System.out.println("Case déjà occupée par un pion ");
			return false;
		}
		return true;
	}
	
	
	/**
	 * Description: permet de rentrer un pion dans le graphe
	 * avec les cordonnées rentrés par l'utilisateur et
	 * retourne le graphe ou la chaine de caractere
	 * "Menu" pour interrompre le coup
	 * 
	 * pré-condtion: graphe!=null
	 */
	
	private String rentrerCoup(String graphe,char pion){
		boolean b;
		GererErreur g=new GererErreur();
		int reponse1;
		int reponse2;
		System.out.print("Veuillez donner la ligne à rentrer (ou -1 pour accéder au menu):");
		reponse1=g.gererErreurInt();
			
		
		System.out.print("Veuillez donner la colonne à rentrer (ou -1 pour accéder au menu):");
		reponse2=g.gererErreurInt();
		
		b=verifierCoup(graphe,reponse1,reponse2);
		while(!b){
			
			System.out.print("Veuillez donner la ligne à rentrer (ou -1 pour accéder au menu): ");
			reponse1=g.gererErreurInt();
			
			
			
			System.out.print("Veuillez donner la colonne à rentrer (ou -1 pour accéder au menu): ");
			reponse2=g.gererErreurInt();
			
			if(reponse2==-1){
				return "Menu";
			}
			
			b=verifierCoup(graphe,reponse1,reponse2);
			
			
		}
		graphe=Plateau.rentrerCoup(graphe,pion,reponse1,reponse2);
	
		
		if(pion=='b'){
			Menu.afficher(graphe);
			System.out.println("Le joueur BLANC à jouer à la case [" + reponse1 +","+ reponse2+"]" );
		}
		else{
			Menu.afficher(graphe);
			System.out.println("Le joueur NOIR à jouer à la case [" + reponse1 +","+ reponse2+"]" );
		}
		
		return graphe;
		
		
	}
	
	/**
	 * Description: vérifie si il a un gagnant sur le plateau
	 * et renvoi le pion du gagnant si il y en a sinon le caractere '.'
	 * 
	 * pré-condition: s!=null
	 */

	public char gagnant(String s){
		
		return Plateau.verifierGagnant(s);

	}
	
	/**
	 * Description: joue une partie en commençant avec un graphe et un 
	 * pion qui commence le tour.
	 * Retourne 1 si la partie termine avec un gagnant ou -1 si
	 * la partie est interrompue
	 * 
	 * pré-condition:graphe!=null ⋀ ( pionQuiCommence='b' ⋁   pionQuiCommence='n' )
	 */
	
	public void run(){
		String graphe=Plateau.creerGraphe(taille);
		String blanc="BLANC";
		String noir="NOIR";
		String j=null;
		int nbCoup=0;
		
		char pion=pionQuiCommence;
		String valeur;
		int[] coordonnees_ia;
		int x=0;
		int y=0;
		System.out.println("Allez, il est temps de jouer!\n");
		while(gagnant(graphe)=='.'){
				try {
				    Thread.sleep(1000);
				} catch(InterruptedException ex) {
				    Thread.currentThread().interrupt();
				}
				System.out.println("Tour numéro: " + nbTour);
				Menu.afficher(graphe);
				if(pion==pionQuiCommence)
					nbTour++;
				
				if(pion=='n'){
					j=noir;
					nbCoup=nbCoupNoir;
				}else{
					j=blanc;
					nbCoup=nbCoupBlanc;
				}
				
				System.out.println("C'est au joueur "+j+" de jouer");
				System.out.println("Il joue son "+ nbCoup +"e coup.");
				if(!ia||(pionQuiCommence==pion&&!commence_ia)||(pionQuiCommence!=pion&&commence_ia)){
					valeur=rentrerCoup(graphe,pion);
					graphe=valeur;
				}else{
					if(difficulte.equals("Facile"))
						coordonnees_ia=IA.jouerCoupFacile(graphe,pion);
					else if(difficulte.equals("Moyenne"))
						coordonnees_ia=IA.jouerCoupMoyen(graphe,pion);
					else if(difficulte.equals("Difficile"))
						coordonnees_ia=IA.jouerCoupDifficile(graphe,pion);
					else
						coordonnees_ia=IA.jouerCoupImpossible(graphe,pion);
					x=coordonnees_ia[0];
					y=coordonnees_ia[1];
					graphe=Plateau.rentrerCoup(graphe,pion,x,y);
				}
				
				if(pion=='n'){
					nbCoupNoir++;
					pion='b';
				}else{
					nbCoupBlanc++;
					pion='n';
				}
			}
		System.out.println("Bravo! Le joueur "+j+" à gagner en "+nbCoup+ " coup!");
		System.out.println("La parti est fini, retour au menu...");
	}
		
		
		
	
	private String rentrerCoupIA(String graphe,char pion, int x, int y,char difficulte){
		String g;
		if(pion=='b')
			System.out.println("Le joueur BLANC à jouer à la case [" + x +","+ y+"]" );
		else
			System.out.println("Le joueur NOIR à jouer à la case [" + x +","+ y+"]" );
		Menu m=new Menu();
		g=Plateau.rentrerCoup(graphe,pion,x,y);
		m.sauvegarderTemporaire(graphe,pion,x,y,true,true,'.',difficulte);
		return g;
		
		
	}
}