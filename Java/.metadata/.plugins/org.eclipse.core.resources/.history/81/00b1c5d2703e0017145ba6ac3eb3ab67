package hex.ihm;

import java.awt.GridLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

import hex.Jouer;
import hex.ihm.menu.Difficulte;
import hex.ihm.menu.choixIACommence;
import hex.ihm.menu.choixJoueur;
import hex.ihm.menu.choixOrdinateur;
import hex.ihm.menu.choixTaillePlateau;


public class Menu extends JPanel{
  private JLabel label_difficulte = new JLabel("Difficulté de l'IA:");
  private JLabel label_choix_ordinateur = new JLabel("Jouer contre l'ordinateur:");
  private Difficulte menu_difficulte = new Difficulte();
  private JLabel label_choix_joueur = new JLabel("Joueur qui commence:");
  private JLabel label_menu = new JLabel("MENU DU JEU",SwingConstants.CENTER);
  private choixJoueur menu_choix_joueur = new choixJoueur();
  private choixOrdinateur menu_choix_ordinateur = new choixOrdinateur();
  private choixIACommence menu_commence_ia=new choixIACommence();
  private JLabel label_commence_ia = new JLabel("Est-ce que l'ordinateur commence ?:");
  private JLabel label_taille = new JLabel("Taille du plateau:");
  private choixTaillePlateau menu_taille_plateau=new choixTaillePlateau();
  private JButton commencerPartie=new JButton("Commencer la partie!");
	
	
	/**
	 * 
	 * Description: Permet de jouer au jeu complet,
	 * gère nouvelle partie, sauvegarde, chargement,
	 * annuler dernier coup, choix taille plateau etc...
	 * 
	 */
	
	public Menu(Fenetre fen){
    this.setLayout(new GridLayout(12, 1));
    this.add(label_menu);
    this.add(label_difficulte);
    this.add(menu_difficulte);
    this.add(label_choix_ordinateur);
    this.add(menu_choix_ordinateur);
    this.add(label_commence_ia);
    this.add(menu_commence_ia);
    this.add(label_choix_joueur);
    this.add(menu_choix_joueur);
    this.add(label_taille);
    this.add(menu_taille_plateau);
    this.add(commencerPartie);
    commencerPartie.addActionListener(new StateListener(fen));
  }

	class StateListener implements MouseListener{
		private Fenetre fen;
		public StateListener(Fenetre fen){
			this.fen=fen;
		}
	  public void mouseClicked(MouseEvent event) {
	    Jouer j=new Jouer();
	    char pion=menu_choix_joueur.getJoueur();
	  	String difficulte=menu_difficulte.getDifficulte();
	  	boolean ia=menu_choix_ordinateur.isChoix();
	  	boolean commence_ia=menu_choix_ordinateur.isChoix();
	  	int taille=menu_taille_plateau.getTaille();
	  	j.jouerPartie(taille, pion, ia, commence_ia, difficulte);
	  	fen.next();
	  }
	  public void mouseReleased(MouseEvent event);
	}
	
	
 
}